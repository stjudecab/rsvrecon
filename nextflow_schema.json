{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/stjudecab/rsvrecon/master/nextflow_schema.json",
    "title": "stjudecab/rsvrecon pipeline parameters",
    "description": "A pipeline for assembling genomic sequences of respiratory syncytial virus (RSV) from NGS data",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row.",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            },
            "required": ["input", "outdir"]
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "genome": {
                    "type": "string",
                    "description": "Name of iGenomes reference.",
                    "fa_icon": "fas fa-book",
                    "help_text": "If using a reference genome configured in the pipeline using iGenomes, use this parameter to give the ID for the reference. This is then used to build the full paths for all required reference genome files e.g. `--genome GRCh38`. \n\nSee the [nf-core website docs](https://nf-co.re/usage/reference_genomes) for more details."
                },
                "rsv_fasta_pool": {
                    "type": "string",
                    "format": "file-path",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "mimetype": "text/plain",
                    "description": "Path to RSV FASTA genome pool file.",
                    "fa_icon": "far fa-file-code"
                },
                "rsv_gff_pool": {
                    "type": "string",
                    "format": "file-path",
                    "pattern": "^\\S+\\.gff(\\.gz)?$",
                    "mimetype": "text/plain",
                    "description": "Path to RSV GFF pool file.",
                    "fa_icon": "far fa-file-code"
                },
                "rsv_meta_pool": {
                    "type": "string",
                    "format": "file-path",
                    "pattern": "^\\S+\\.csv$",
                    "mimetype": "text/csv",
                    "description": "Path to RSV meta pool file.",
                    "fa_icon": "far fa-file-code"
                },
                "kma_index": {
                    "type": "string",
                    "format": "path",
                    "description": "Path to directory or tar.gz archive for pre-built KMA index.",
                    "fa_icon": "fas fa-bezier-curve"
                },
                "blast_gisaid_db": {
                    "type": "string",
                    "format": "path",
                    "fa_icon": "far fa-file-code",
                    "description": "Path to the GISAID BLAST Database"
                },
                "genotype_whole_genome_fasta": {
                    "type": "string",
                    "format": "file-path",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "mimetype": "text/plain",
                    "description": "Path to whole genome genotyping FASTA file.",
                    "fa_icon": "far fa-file-code"
                },
                "genotype_whole_genome_meta": {
                    "type": "string",
                    "format": "file-path",
                    "fa_icon": "far fa-file-code",
                    "description": "Path to whole genome genotyping meta file.",
                    "pattern": "^\\S+\\.csv(\\.gz)?$"
                },
                "genotype_ggene_fasta": {
                    "type": "string",
                    "format": "file-path",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "mimetype": "text/plain",
                    "description": "Path to whole genome genotyping G-gene FASTA file.",
                    "fa_icon": "far fa-file-code"
                },
                "save_reference": {
                    "type": "boolean",
                    "description": "If generated by the pipeline save the reference files in the results directory.",
                    "fa_icon": "fas fa-save"
                },
                "igenomes_ignore": {
                    "type": "boolean",
                    "description": "Do not load the iGenomes reference config.",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "help_text": "Do not load `igenomes.config` when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in `igenomes.config`."
                },
                "igenomes_base": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The base path to the igenomes reference files",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "default": "s3://ngi-igenomes/igenomes/"
                }
            }
        },
        "read_trimming_and_filtering_options": {
            "title": "Illumina QC, read trimming and filtering options",
            "type": "object",
            "description": "Options to read trimming and host read filtering",
            "properties": {
                "save_trimmed_fail": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Save the trimmed FastQ files in the results directory.",
                    "help_text": "By default, trimmed FastQ files will not be saved to the results directory. Specify this flag (or set to true in your config file) to copy these files to the results directory when complete."
                },
                "skip_fastp": {
                    "type": "boolean",
                    "fa_icon": "fas fa-fast-forward",
                    "description": "Skip the initial read trimming step peformed by fastp."
                }
            },
            "fa_icon": "fas fa-cut"
        },
        "rsv_mapping_and_assembly_options": {
            "title": "RSV mapping and assembly options",
            "type": "object",
            "description": "Options to sequence alignment and assembly",
            "properties": {
                "genomeSAindexNbases": {
                    "type": "integer",
                    "default": 5,
                    "fa_icon": "fas fa-dna",
                    "description": "SA index #Bases used by STAR to build index."
                },
                "igv_cutoff": {
                    "type": "integer",
                    "default": 50,
                    "fa_icon": "fas fa-ruler-horizontal",
                    "description": "Igv-count cut-off threshold."
                },
                "save_unaligned": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Where possible, save unaligned reads from STAR to the results directory."
                }
            },
            "fa_icon": "fas fa-dna"
        },
        "process_skipping_options": {
            "title": "Process skipping options",
            "type": "object",
            "description": "Options to skip various steps within the workflow.",
            "default": "",
            "help_text": "",
            "properties": {
                "skip_qc": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Skip all QC."
                },
                "skip_fastqc": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Skip FastQC."
                },
                "skip_multiqc": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Skip MultiQC."
                },
                "skip_genotyping": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Skip Genotyping (including whole genome and g-gene)"
                },
                "skip_wholegenome_genotyping": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Skip Whole Genome Genotyping."
                },
                "skip_ggene_genotyping": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Skip G-gene Genotyping."
                }
            },
            "fa_icon": "fas fa-forward"
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "save_log": {
                    "type": "boolean",
                    "fa_icon": "fas fa-palette",
                    "description": "Save the log files to results."
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/stjudecab/test_datasets/",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/reference_genome_options"
        },
        {
            "$ref": "#/$defs/read_trimming_and_filtering_options"
        },
        {
            "$ref": "#/$defs/rsv_mapping_and_assembly_options"
        },
        {
            "$ref": "#/$defs/process_skipping_options"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ]
}
