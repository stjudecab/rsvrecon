/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: 'SAMPLESHEET_CHECK' {
        publishDir = [
            enabled: false
        ]
    }

}

/////////////
// FILE QC //
/////////////

// FASTQC
if (!params.skip_qc && !params.skip_fastqc) {

    process {
        withName: '.*:FASTQ_TRIM_FASTP_FASTQC:FASTQC_RAW' {
            ext.args = '--quiet'
            ext.prefix = { "${meta.id}.raw" }
            publishDir = [
                path: { "${params.outdir}/${meta.id}/qc/fastqc/pre_trim" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }

        if (!params.skip_fastp) {
            withName: '.*:FASTQ_TRIM_FASTP_FASTQC:FASTQC_TRIM' {
                ext.args = '--quiet'
                ext.prefix = { "${meta.id}.trimmed" }
                publishDir = [
                    path: { "${params.outdir}/${meta.id}/qc/fastqc/post_trim" },
                    mode: params.publish_dir_mode,
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
                ]
            }
        }
    }
}

// FASTP
if (!params.skip_fastp) {

    process {
        withName: '.*:FASTQ_TRIM_FASTP_FASTQC:FASTP' {
            ext.prefix = { "${meta.id}_trimmed" }
            publishDir = [
                [
                    path: { "${params.outdir}/${meta.id}/qc/fastp" },
                    mode: params.publish_dir_mode,
                    pattern: "*.{json,html}"
                ],
                [
                    path: { "${params.outdir}/${meta.id}/qc/fastp/log" },
                    mode: params.publish_dir_mode,
                    pattern: "*.log"
                ],
                [
                    path: { "${params.outdir}/${meta.id}/qc/fastp" },
                    mode: params.publish_dir_mode,
                    pattern: "*.fail.fastq.gz",
                    enabled: params.save_trimmed_fail
                ],
                [
                    path: { "${params.outdir}/${meta.id}/fastq/trimmed_fastp" },
                    mode: params.publish_dir_mode,
                    pattern: "*.fastp.fastq.gz"
                ]
            ]
        }
    }
}


/////////////////////
//  PREPROCESSING  //
/////////////////////

process {
    withName: 'CAT_FASTQ' {
        publishDir = [
           enabled: false
        ]
    }

}


/////////////
// MULTIQC //
/////////////

if (!params.skip_qc && !params.skip_multiqc) {
    process {
        withName: '.*:MULTIQC_FINALQC' {
            ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
            publishDir = [
                path: { "${params.outdir}/batch_qcs/multiqc/final_qc" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
    }

    process {
        withName: '.*:MULTIQC_RAWQC' {
            ext.args = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
            publishDir = [
                path: { "${params.outdir}/batch_qcs/multiqc/raw_qc" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
    }
}
